{"version":3,"sources":["src/DOM.js","src/Form.js","src/Platform.js","src/Request.js","src/Preload.js","src/Space.js","src/Text.js","index.js"],"names":["$_","$_ready","DOM","selector","collection","document","querySelectorAll","length","NodeList","style","display","newClass","classList","add","oldClass","remove","element","item","classes","split","j","toggle","classToCheck","value","focus","callback","addEventListener","event","target","e","matches","call","querySelector","name","dataset","textContent","innerHTML","div","createElement","appendChild","firstChild","childNodes","insertBefore","index","offsetWidth","offsetHeight","parentElement","rect","getBoundingClientRect","top","body","scrollTop","left","scrollLeft","find","get","parent","attribute","setAttribute","getAttribute","content","insertAdjacentHTML","properties","i","property","time","start","Date","getTime","timer","initialValue","setInterval","step","Math","min","opacity","last","tick","requestAnimationFrame","setTimeout","check","Element","prototype","polyfill","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","parentNode","removeChild","replaceChild","reset","Form","data","field","type","each","files","Platform","window","devicePixelRatio","innerHeight","innerWidth","orientation","portrait","process","cordova","platform","match","navigator","includes","test","userAgent","location","protocol","Request","url","responseType","Promise","resolve","reject","query","Object","keys","map","key","encodeURIComponent","join","request","XMLHttpRequest","open","onload","response","onerror","send","contentType","formData","setRequestHeader","FormData","append","Preload","route","image","Image","src","Space","version","Type","Local","callbacks","transformations","numericVersion","parseInt","replace","id","Session","create","storage","localStorage","sessionSpace","IndexedDB","indexedDB","onsuccess","result","onupgradeneeded","then","set","setItem","JSON","stringify","store","getItem","o","parse","exception","oldVersion","newVersion","filter","promises","previous","push","removeItem","all","oldId","delete","full","Text","text","txt","charAt","toUpperCase","substr","toLowerCase","suffix","position","prefix","regex","replacements","RegExp"],"mappings":"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","file":"artemis.min.map","sourceRoot":"..","sourcesContent":["\n/**\n * Simple DOM manipulation functions\n *\n * @class\n */\nexport class DOM {\n\n\t/**\n\t * Create a new DOM object\n\t *\n\t * @constructor\n\t * @param  {string|Object|array} selector - Selector or DOM element to use\n\t * @return {DOM} - New instance of DOM\n\t */\n\tconstructor (selector) {\n\t\tif (typeof selector == 'string') {\n\t\t\tthis.collection = document.querySelectorAll (selector);\n\t\t\tthis.length = this.collection.length;\n\t\t} else if (selector instanceof NodeList) {\n\t\t\tthis.collection = selector;\n\t\t\tthis.length = selector.length;\n\t\t} else if (typeof selector == 'object') {\n\t\t\tif (selector.length >= 1) {\n\t\t\t\tthis.collection = selector;\n\t\t\t} else {\n\t\t\t\tthis.collection = [selector];\n\t\t\t}\n\t\t\tthis.length = this.collection.length;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Hide elements by setting their `display` property to 'none'.\n\t */\n\thide () {\n\t\tfor (const element of this.collection) {\n\t\t\telement.style.display = 'none';\n\t\t}\n\t}\n\n\t/**\n\t * Show elements by setting their `display` property to the given value.\n\t *\n\t * @param {string} [display='block'] - Display property to set\n\t */\n\tshow (display = 'block') {\n\t\tfor (const element of this.collection) {\n\t\t\telement.style.display = display;\n\t\t}\n\t}\n\n\t/**\n\t * Add a class to the classList object\n\t *\n\t * @param  {string} newClass - Class name to add\n\t */\n\taddClass (newClass) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.classList.add (newClass);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a given class from the classList object\n\t *\n\t * @param  {string} [oldClass=null] - Class to remove. If it's empty or null,\n\t * all classes will be removed\n\t */\n\tremoveClass (oldClass = null) {\n\t\tif (oldClass !== null) {\n\t\t\tfor (const element of this.collection) {\n\t\t\t\telement.classList.remove (oldClass);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const element of this.collection) {\n\t\t\t\twhile (element.classList.length > 0) {\n\t\t\t\t\telement.classList.remove (element.classList.item (0));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggle between two classes\n\t *\n\t * @param  {string} classes - Space separated class names\n\t */\n\ttoggleClass (classes) {\n\t\tclasses = classes.split (' ');\n\t\tfor (const element of this.collection) {\n\t\t\tfor (let j = 0; j < classes.length; j++) {\n\t\t\t\telement.classList.toggle (classes[j]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check if the first element matching the selector has the given class\n\t *\n\t * @param  {string} classToCheck - Class name to check for\n\t * @return {boolean} - Whether the class is present or not\n\t */\n\thasClass (classToCheck) {\n\t\tif (this.collection[0]) {\n\t\t\tfor (let j = 0; j < this.collection[0].classList.length; j++) {\n\t\t\t\tif (this.collection[0].classList[j] == classToCheck) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get or set the value from the first element matching the selector\n\t *\n\t * @param  {string} value - Value to set to the element.\n\t * @return {string} - If no value was provided, this returns the value of the\n\t * element instead of setting it\n\t */\n\tvalue (value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].value;\n\t\t\t} else {\n\t\t\t\tthis.collection[0].value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Focus on the first element matching the selector\n\t */\n\tfocus () {\n\t\tif (this.length > 0) {\n\t\t\tthis.collection[0].focus ();\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'click' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tclick (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('click', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'keyup' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tkeyup (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('keyup', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'keydown' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tkeydown (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('keydown', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'submit' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tsubmit (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('submit', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'change' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tchange (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('change', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback for the 'scroll' event on every element matching the selector\n\t *\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\tscroll (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.addEventListener ('scroll', callback, false);\n\t\t}\n\t}\n\n\t/**\n\t * Add a callback function to a given event\n\t *\n\t * @param  {string} event - Event to add the listener to\n\t * @param  {string} target - Target element on which to detect the event\n\t * @param  {function} callback - Callback function to run when the event is triggered\n\t */\n\ton (event, target, callback) {\n\t\tevent = event.split(' ');\n\t\tfor (const element of this.collection) {\n\t\t\tfor (let j = 0; j < event.length; j++) {\n\n\t\t\t\t// Check if no target was defined and just a function was provided\n\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\telement.addEventListener(event[j], target, false);\n\t\t\t\t} else if (typeof target === 'string' && typeof callback === 'function') {\n\t\t\t\t\telement.addEventListener(event[j], (e) => {\n\t\t\t\t\t\tif (e.target && $_(e.target).matches (target)) {\n\t\t\t\t\t\t\tcallback.call (e.target, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filter from the current collection to only those matching the new selector\n\t *\n\t * @param  {string} element - Selector to filter the collection with\n\t * @return {DOM} - New DOM instance with the filtered collection\n\t */\n\tfilter (selector) {\n\t\tif (this.length > 0) {\n\t\t\treturn new DOM (this.collection[0].querySelector (selector));\n\t\t}\n\t}\n\n\t/**\n\t * Get or set a `data` property\n\t *\n\t * @param  {string} name - Name of the data property\n\t * @param  {string} [value] - Value of the property\n\t * @return {string} - If no value is set, this function returns it's current value\n\t */\n\tdata (name, value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].dataset[name];\n\t\t\t} else {\n\t\t\t\tthis.collection[0].dataset[name] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get or set the text of the first element matching the selector\n\t *\n\t * @param  {string} [value] - Value to set the text to\n\t * @return {type} - If no value is present, this function returns its the\n\t * element's current text.\n\t */\n\ttext (value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].textContent;\n\t\t\t} else {\n\t\t\t\tthis.collection[0].textContent = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get or set the inner HTML of the first element matching the selector\n\t *\n\t * @param  {string} [value] - Value to set the HTML to\n\t * @return {type} - If no value is present, this function returns its the\n\t * element's current HTML.\n\t */\n\thtml (value) {\n\t\tif (this.length > 0) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\treturn this.collection[0].innerHTML;\n\t\t\t} else {\n\t\t\t\tthis.collection[0].innerHTML = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Append an element to the first element matching the selector\n\t *\n\t * @param  {string} element - String representation of the element to add\n\t */\n\tappend (element) {\n\t\tif (this.length > 0) {\n\t\t\tconst div = document.createElement ('div');\n\t\t\tdiv.innerHTML = element;\n\t\t\tthis.collection[0].appendChild (div.firstChild);\n\t\t}\n\t}\n\n\t/**\n\t * Prepend an element to the first element matching the selector\n\t *\n\t * @param  {string} element - String representation of the element to add\n\t */\n\tprepend (element) {\n\t\tif (this.length > 0) {\n\t\t\tconst div = document.createElement ('div');\n\t\t\tdiv.innerHTML = element;\n\t\t\tif (this.collection[0].childNodes.length > 0) {\n\t\t\t\tthis.collection[0].insertBefore (div.firstChild, this.collection[0].childNodes[0]);\n\t\t\t} else {\n\t\t\t\tthis.collection[0].appendChild (div.firstChild);\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * Iterate over the collection of elements matching the selector\n\t *\n\t * @param  {function} callback - Callback to run for every element\n\t */\n\teach (callback) {\n\t\tfor (const element of this.collection) {\n\t\t\tcallback (element);\n\t\t}\n\t}\n\n\t/**\n\t * Get an element from the collection given it's index\n\t *\n\t * @param  {int} index - Index of the element to retrieve\n\t * @return {HTMLElement} - HTML Element in the position indicated by the index\n\t */\n\tget (index) {\n\t\treturn this.collection[index];\n\t}\n\n\t/**\n\t * Get the first element in the collection\n\t *\n\t * @return {DOM} - DOM instance with the first element\n\t */\n\tfirst () {\n\t\tif (this.length > 0) {\n\t\t\treturn new DOM (this.collection[0]);\n\t\t}\n\t}\n\n\t/**\n\t * Check if the elements in the collection are visible by chacking their\n\t * display, offsetWidth and offsetHeight properties\n\t *\n\t * @return {boolean} - Whether the elements are visible or not\n\t */\n\tisVisible () {\n\t\tfor (const element of this.collection) {\n\t\t\tif (element.display != 'none' && element.offsetWidth > 0 && element.offsetHeight > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get the parent of the first element matching the selector\n\t *\n\t * @return {DOM} - DOM instance of the parent element\n\t */\n\tparent () {\n\t\tif (this.collection[0]) {\n\t\t\treturn new DOM (this.collection[0].parentElement);\n\t\t}\n\t}\n\n\t/**\n\t * Find an element that matches the given selector in the first element of the collection\n\t *\n\t * @param  {string} selector - Selector to find the element with\n\t * @return {DOM} - Aegis instance with the element if found\n\t */\n\tfind (selector) {\n\t\tif (this.collection[0]) {\n\t\t\treturn new DOM (this.collection[0].querySelectorAll (selector));\n\t\t}\n\t}\n\n\t/**\n\t * Get the top and left offsets of the first element matching the selector\n\t *\n\t * @return {Object} - Object with `top` and `left` offsets\n\t */\n\toffset () {\n\t\tif (this.collection[0]) {\n\t\t\tconst rect = this.collection[0].getBoundingClientRect ();\n\t\t\treturn {\n\t\t\t\ttop: rect.top + document.body.scrollTop,\n\t\t\t\tleft: rect.left + document.body.scrollLeft\n\t\t\t};\n\t\t}\n\t}\n\n\n\t/**\n\t * Find the closest element matching the given selector. This bubbles up\n\t * from the initial object and then follows to its parents.\n\t *\n\t * @param  {string} selector - Selector to match the closest element with\n\t * @return {DOM} - DOM instance with the closest HTML element matching the selector\n\t */\n\tclosest (selector) {\n\t\tlet element = this.find (selector);\n\t\twhile (typeof element.get (0) == 'undefined' && typeof this.parent().get (0) != 'undefined') {\n\t\t\telement = this.parent ().find (selector);\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Get or set the value of a given attribute\n\t *\n\t * @param  {string} attribute - Attribute's name\n\t * @param  {string|Number} [value] - Value to set the attribute to\n\t * @return {type} - If no value is provided, this function returns the current\n\t * value of the provided attribute\n\t */\n\tattribute (attribute, value) {\n\t\tif (this.collection[0]) {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\tthis.collection[0].getAttribute (attribute);\n\t\t\t} else {\n\t\t\t\treturn this.collection[0].setAttribute (attribute, value);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Insert content to the `after` property of an element\n\t *\n\t * @param  {string} content - String representation of the content to add\n\t */\n\tafter (content) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.insertAdjacentHTML ('afterend', content);\n\t\t}\n\t}\n\n\t/**\n\t * Insert content to the `before` property of an element\n\t *\n\t * @param  {string} content - String representation of the content to add\n\t */\n\tbefore (content) {\n\t\tfor (const element of this.collection) {\n\t\t\telement.insertAdjacentHTML ('beforebegin', content);\n\t\t}\n\t}\n\n\t/**\n\t * Get or modify the `style` properties of the elements matching the selector\n\t *\n\t * @param  {string|Object} properties - Properties to change or get. Can be\n\t * either an individual property or a JSON object with key-value pairs\n\t * @param  {string} [value] - Value to set the property to when only changing\n\t * one property\n\t * @return {string} - If a peoperty is given but not a value for it, this\n\t * function will return its current value\n\t */\n\tstyle (properties, value) {\n\t\tfor (let i = 0; i < this.collection.length; i++) {\n\t\t\tif (typeof properties === 'string' && value !== 'undefined') {\n\t\t\t\tthis.collection[i].style[properties] = value;\n\t\t\t} else if (typeof properties === 'string' && value === 'undefined') {\n\t\t\t\treturn this.collection[i].style[properties];\n\t\t\t} else if (typeof properties === 'object') {\n\t\t\t\tfor (const property in properties) {\n\t\t\t\t\tthis.collection[i].style[property] = properties[property];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Animate the given `style` properties on all elements in the collection in\n\t * with a given time duration\n\t *\n\t * @param  {Object} style - JSON object with the key-value pairs of properties\n\t * to animate\n\t * @param  {int} time - Time in milliseconds during which the properties will\n\t * be animated\n\t */\n\tanimate (style, time) {\n\t\tfor (let i = 0; i < this.collection.length; i++) {\n\t\t\tfor (const property in style) {\n\n\t\t\t\tconst start = new Date().getTime();\n\t\t\t\tconst collection = this.collection;\n\t\t\t\tlet timer;\n\t\t\t\tlet initialValue;\n\t\t\t\tif (typeof this.collection[i].style[property] !== 'undefined') {\n\t\t\t\t\tinitialValue = this.collection[i].style[property];\n\n\t\t\t\t\ttimer = setInterval (() => {\n\t\t\t\t\t\tconst step = Math.min (1, (new Date ().getTime () - start) / time);\n\n\t\t\t\t\t\tcollection[i].style[property] = (initialValue + step * (style[property] - initialValue));\n\n\t\t\t\t\t\tif (step == 1) {\n\t\t\t\t\t\t\tclearInterval (timer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 25);\n\t\t\t\t\tthis.collection[i].style[property] = initialValue;\n\n\t\t\t\t} else if (typeof (this.collection[i])[property] !== 'undefined') {\n\t\t\t\t\tinitialValue = (this.collection[i])[property];\n\n\t\t\t\t\ttimer = setInterval(() => {\n\t\t\t\t\t\tconst step = Math.min (1, (new Date ().getTime () - start) / time);\n\n\t\t\t\t\t\t(collection[i])[property] = (initialValue + step * (style[property] - initialValue));\n\n\t\t\t\t\t\tif (step == 1) {\n\t\t\t\t\t\t\tclearInterval (timer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 25);\n\t\t\t\t\t(this.collection[i])[property] = initialValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Use a fade in animation i the first element matching the selector\n\t *\n\t * @param  {type} [time=400] - Time duration for the animation\n\t * @param  {type} callback - Callback function to run once the animation is over\n\t */\n\tfadeIn (time = 400, callback) {\n\t\tif (this.collection[0]) {\n\t\t\tconst element = this.collection[0];\n\t\t\telement.style.opacity = 0;\n\n\t\t\tlet last = +new Date();\n\n\t\t\tconst tick = () => {\n\t\t\t\telement.style.opacity = +element.style.opacity + (new Date() - last) / time;\n\t\t\t\tlast = +new Date();\n\n\t\t\t\tif (+element.style.opacity < 1) {\n\t\t\t\t\t(window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttick();\n\t\t}\n\t}\n\n\t/**\n\t * Use a fade out animation i the first element matching the selector\n\t *\n\t * @param  {type} [time=400] - Time duration for the animation\n\t * @param  {type} callback - Callback function to run once the animation is over\n\t */\n\tfadeOut (time = 400, callback) {\n\t\tif (this.collection[0]) {\n\t\t\tlet last = +new Date ();\n\t\t\tconst element = this.collection[0];\n\t\t\tconst tick = () => {\n\t\t\t\telement.style.opacity = +element.style.opacity - (new Date() - last) / time;\n\t\t\t\tlast = +new Date ();\n\n\t\t\t\tif (+element.style.opacity > 0) {\n\t\t\t\t\t(window.requestAnimationFrame && requestAnimationFrame (tick)) || setTimeout(tick, 16);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\tcallback ();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\ttick ();\n\t\t}\n\t}\n\n\t/**\tCheck if the first element in the collection matches a given selector\n\t *\n\t * @param  {string} selector - Selector to match\n\t * @return {boolean} - Whether the element matches the selector or not\n\t */\n\tmatches (selector) {\n\t\tconst check = Element.prototype;\n\t\tconst polyfill = check.matches || check.webkitMatchesSelector || check.mozMatchesSelector || check.msMatchesSelector || function () {\n\t\t\treturn [].indexOf.call (document.querySelectorAll (selector), this) !== -1;\n\t\t};\n\t\treturn polyfill.call (this.collection[0], selector);\n\t}\n\n\t/**\n\t * Remove all elemets in the collection\n\t */\n\tremove () {\n\t\tfor (const element of this.collection) {\n\t\t\telement.parentNode.removeChild (element);\n\t\t}\n\t}\n\n\t/**\n\t * Replace the first element in the collection with a new one\n\t */\n\treplaceWith (element) {\n\t\tconst div = document.createElement ('div');\n\t\tdiv.innerHTML = element;\n\t\tthis.collection[0].parentElement.replaceChild (div, this.collection[0]);\n\t}\n\n\t/**\n\t * Reset every element in the collection\n\t */\n\treset () {\n\t\tif (this.length > 0) {\n\t\t\tthis.collection[0].reset ();\n\t\t}\n\t}\n\n\t/**\n\t * Get or set a property for the first element in the collection\n\t *\n\t * @param  {string} property - Property name to set or get\n\t * @param  {string|Number} [value] - Value to set the property to\n\t * @return {string|Number} - If no value is provided, this funcion will return the\n\t * current value of the indicated property\n\t */\n\tproperty (property, value) {\n\t\tif (this.collection[0]) {\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tthis.collection[0][property] = value;\n\t\t\t} else {\n\t\t\t\treturn this.collection[0][property];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Simple wrapper function to use the DOM library\n *\n * @param  {string|Object|array} selector - Selector or DOM element to use\n * @return {DOM} - DOM instance or class if no selector is used\n */\nexport function $_ (selector) {\n\tif (typeof selector !== 'undefined') {\n\t\treturn new DOM (selector);\n\t} else {\n\t\treturn DOM;\n\t}\n}\n\n/**\n * Utility function to attach the 'load' listener to the window\n *\n * @param  {function} callback - Callback function to run when the window is ready\n */\nexport function $_ready (callback) {\n\twindow.addEventListener ('load', callback);\n}","/**\n* ==============================\n* Form\n* ==============================\n*/\n\nimport { $_ } from './DOM';\n\n/**\n * Utility class that provides simple function for filling and retrieving values\n * from froms. This class requires the use of the `data-form` attribute.\n *\n * @class\n */\nexport class Form {\n\n\t/**\n\t * @static fill - Fill a form's inputs with the given values. Each key in the\n\t * provided object must match the `name` attribute of the input to fill.\n\t *\n\t * @param  {string} name - Form name. Must match the `data-form` attribute of the Form.\n\t * @param  {Object} data - JSON object with key-value pairs to fill the inputs.\n\t */\n\tstatic fill (name, data) {\n\t\tfor (const field in data) {\n\t\t\tconst element = $_(`form[data-form='${name}'] [name='${field}']`).get (0);\n\t\t\tif (typeof element != 'undefined') {\n\t\t\t\tswitch (element.type) {\n\n\t\t\t\t\tcase 'file':\n\t\t\t\t\tcase 'file[]':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\telement.value = data[field];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * @static values - Get all the values from a form's input. The keys are mapped\n\t * using the `name` attribute of each input.\n\t *\n\t * @param  {string} name - Form name. Must match the `data-form` attribute of the Form.\n\t * @return {Object} - Key-value JSON object\n\t */\n\tstatic values (name) {\n\t\tconst data = {};\n\t\t$_(`form[data-form='${name}'] [name]`).each ((element) => {\n\t\t\tlet value;\n\t\t\tswitch (element.type) {\n\t\t\t\tcase 'file[]':\n\t\t\t\t\tvalue = element.files;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file':\n\t\t\t\t\tvalue = element.files[0];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvalue = element.value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (typeof value != 'undefined' && value !== null) {\n\t\t\t\tdata[element.name] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn data;\n\t}\n}","/**\n* ==============================\n* Platform\n* ==============================\n*/\n\n/**\n * General checks for what kind of platform is the being used to run the app.\n * @class\n */\nexport class Platform {\n\n\t/**\n\t * Check if the screen has a retina pixel ratio\n\t * @returns {boolean}\n\t */\n\tstatic retina () {\n\t\treturn window.devicePixelRatio >= 2;\n\t}\n\n\t/**\n\t * Check if the device is on portrait orientation\n\t * @returns {boolean}\n\t */\n\tstatic portrait () {\n\t\treturn window.innerHeight > window.innerWidth;\n\t}\n\n\t/**\n\t * Check if the device is on landscape orientation\n\t * @returns {boolean}\n\t */\n\tstatic landscape () {\n\t\treturn (window.orientation === 90 || window.orientation === -90);\n\t}\n\n\t/**\n\t * Get device Orientation\n\t * @returns {string} portrait | landscape\n\t */\n\tstatic orientation () {\n\t\treturn Platform.portrait () ? 'portrait' : 'landscape';\n\t}\n\n\t/**\n\t * Check if the app is running over Electron\n\t * @returns {boolean}\n\t */\n\tstatic electron () {\n\t\treturn window && window.process && window.process.type;\n\t}\n\n\t/**\n\t * Check if the app is running over Cordova\n\t * @returns {boolean}\n\t */\n\tstatic cordova () {\n\t\treturn !!window.cordova;\n\t}\n\n\t/**\n\t * Check if the app is running in a desktop platform\n\t * @returns {boolean}\n\t */\n\tstatic desktop (platform = 'Any') {\n\t\tlet match = false;\n\t\tswitch (platform) {\n\t\t\tcase 'Windows':\n\t\t\t\tmatch = navigator.platform.includes ('Win');\n\t\t\t\tbreak;\n\n\t\t\tcase 'macOS':\n\t\t\t\tmatch = navigator.platform.includes ('Mac');\n\t\t\t\tbreak;\n\n\t\t\tcase 'Linux':\n\t\t\t\tmatch = navigator.platform.includes ('Linux');\n\t\t\t\tbreak;\n\n\t\t\tcase 'FreeBSD':\n\t\t\t\tmatch = navigator.platform.includes ('FreeBSD');\n\t\t\t\tbreak;\n\n\t\t\tcase 'webOS':\n\t\t\t\tmatch = navigator.platform.includes ('WebTV');\n\t\t\t\tbreak;\n\n\t\t\tcase 'Any':\n\t\t\tdefault:\n\t\t\t\tmatch = navigator.platform.includes ('Win')\n\t\t\t\t\t\t|| navigator.platform.includes ('Mac')\n\t\t\t\t\t\t|| navigator.platform.includes ('Linux')\n\t\t\t\t\t\t|| navigator.platform.includes ('FreeBSD')\n\t\t\t\t\t\t|| navigator.platform.includes ('WebTV');\n\t\t\t\tbreak;\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * Check if the app is running in a mobile platform\n\t * @param {string } [platform='Any'] - Check for a specific mobile platform [Android | iOS | Opera | Windows | BlackBerry | Any]\n\t * @returns {boolean}\n\t */\n\tstatic mobile (platform = 'Any') {\n\t\tlet match = false;\n\t\tswitch (platform) {\n\t\t\tcase 'Android':\n\t\t\t\tmatch = /Android/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'iOS':\n\t\t\t\tmatch = /iPhone|iPad|iPod/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'Opera':\n\t\t\t\tmatch = /Opera Mini/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'Windows':\n\t\t\t\tmatch = /Windows Phone|IEMobile|WPDesktop/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'BlackBerry':\n\t\t\t\tmatch = /BlackBerry|BB10/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\n\t\t\tcase 'Any':\n\t\t\tdefault:\n\t\t\t\tmatch = /Android|iPhone|iPad|iPod|Windows Phone|IEMobile|WPDesktop|BlackBerry|BB10/i.test (navigator.userAgent);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @static serviceWorkers - Check if the platform allows the use of service\n\t * workers\n\t *\n\t * @return {boolean} - Whether they're supported or not\n\t */\n\tstatic serviceWorkers () {\n\t\tif (typeof navigator !== 'undefined') {\n\t\t\tif ('serviceWorker' in navigator && location.protocol.indexOf ('http') > -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}","/**\n* ==============================\n* Request\n* ==============================\n*/\n\n/**\n * Simple Wrapper for the XMLHttpRequest object. This class will be removed as\n * soon as fetch gets more widely adopted.\n * @class\n */\nexport class Request {\n\n\t/**\n\t * @static get - Make a GET request to a given URL with the provided parameters\n\t * and responseType header.\n\t *\n\t * @param  {string} url - URL to make the request\n\t * @param  {Object} data - Parameters to send in the URL, represented as a JSON object\n\t * @param  {string} [responseType = ''] - Response Type header value\n\t * @return {Promise} - Resolves to the data received from the request\n\t */\n\tstatic get (url, data, responseType = '') {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\tconst query = Object.keys (data).map ((key) => {\n\t\t\t\treturn encodeURIComponent (key) + '=' + encodeURIComponent (data[key]);\n\t\t\t}).join ('&');\n\n\t\t\tif (query !== '') {\n\t\t\t\turl = `${url}?${query}`;\n\t\t\t}\n\n\t\t\tconst request = new XMLHttpRequest ();\n\t\t\trequest.open ('GET', url, true);\n\t\t\trequest.responseType = responseType;\n\n\t\t\trequest.onload = () => {\n\t\t\t\tresolve (request.response);\n\t\t\t};\n\n\t\t\trequest.onerror = () => {\n\t\t\t\treject (request);\n\t\t\t};\n\n\t\t\trequest.send ();\n\t\t});\n\t}\n\n\t/**\n\t * @static post - Make a POST request to a given URL with the provided data,\n\t * responseType and contentType headers\n\t *\n\t * @param  {string} url - URL to make the request\n\t * @param  {Object} data - Key-value pairs to send in the request\n\t * @param  {string} responseType = '' - Response Type header value\n\t * @param  {type} contentType = 'application/x-www-form-urlencoded' - Content Type Header value\n\t * @return {Promise} - Resolves to the data received from the request\n\t */\n\tstatic post (url, data, responseType = '', contentType = 'application/x-www-form-urlencoded') {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\tlet formData;\n\t\t\tconst request = new XMLHttpRequest ();\n\n\t\t\trequest.open ('POST', url, true);\n\n\t\t\tif (contentType == 'application/x-www-form-urlencoded') {\n\n\t\t\t\tformData = Object.keys (data).map ((key) => {\n\t\t\t\t\treturn encodeURIComponent (key) + '=' + encodeURIComponent (data[key]);\n\t\t\t\t}).join ('&');\n\n\t\t\t\trequest.setRequestHeader ('Content-type', contentType);\n\t\t\t} else if (contentType == 'multipart/form-data') {\n\t\t\t\tformData = new FormData ();\n\t\t\t\tfor (const value in data) {\n\t\t\t\t\tformData.append (value, data[value]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequest.responseType = responseType;\n\n\t\t\trequest.onload = () => {\n\t\t\t\tresolve (request.response);\n\t\t\t};\n\n\t\t\trequest.onerror = () => {\n\t\t\t\treject (request);\n\t\t\t};\n\n\t\t\trequest.send (formData);\n\t\t});\n\t}\n\n\t/**\n\t * @static json - Request a JSON object from a given URL through a GET request\n\t *\n\t * @param  {string} url - URL to request the JSON from\n\t * @return {Promise<Object>} - Resolves to the retrieved JSON\n\t */\n\tstatic json (url) {\n\t\treturn Request.get (url, {}, 'json');\n\t}\n}","import { Request } from './Request';\n\n/**\n * A simple class for asset preloading. This class assumes you have a service\n * worker set up that will be caching all requests.\n * @class\n */\nexport class Preload {\n\n\t/**\n\t * @static image - Preload an image file\n\t *\n\t * @param  {string} route - Route to the image\n\t * @return {Promise} - Resolves to the image object or gets rejected with\n\t * the rejection event\n\t */\n\tstatic image (route) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image ();\n\n\t\t\timage.onload = () => {\n\t\t\t\tresolve (image);\n\t\t\t};\n\n\t\t\timage.onerror = (e) => {\n\t\t\t\treject (e);\n\t\t\t};\n\n\t\t\timage.src = route;\n\t\t});\n\t}\n\n\t/**\n\t * @static audio - Preload an audio file\n\t *\n\t * @param  {string} route - Route to the audio file\n\t * @return {Promise} - Resolves or rejects depending on request success\n\t */\n\tstatic audio (route) {\n\t\treturn Request.get (route, null, 'blob');\n\t}\n}","/**\n* ==============================\n* Space\n* ==============================\n*/\n\n/**\n * Space provides a simple wrapper for different Storage approaches. It aims to\n * provide data independence through storage namespaces and versioning, allowing\n * transparent data formatting and content modifications through versions.\n * @class\n */\nexport class Space {\n\n\t/**\n\t * Create a new Space Object. If no name and version is defined, the global LocalSpace space is used.\n\t *\n\t * @constructor\n\t * @param {string} [name=''] - Space Space Name. If name is empty, the\n\t * @param {string} [version=''] - Space Space Version. Must be a numeric string i.e. '0.1.0'\n\t * @param {Space.Type} [type=Space.Type.Local] - Space Space Type. Determines what storage engine will be used.\n\t */\n\tconstructor (name = '', version = '', type = Space.Type.Local) {\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.version = version;\n\n\t\tthis.callbacks = {\n\t\t\t'store': [],\n\t\t\t'delete': []\n\t\t};\n\n\t\tthis.transformations = {};\n\n\t\tif (name !== '' && version !== '') {\n\t\t\tthis.numericVersion = parseInt (version.replace (/\\./g, ''));\n\t\t\tthis.id = `${this.name}::${this.version}_`;\n\t\t} else if (version !== '') {\n\t\t\tthis.numericVersion = parseInt (version.replace (/\\./g, ''));\n\t\t\tthis.id = `${this.name}::${this.version}_`;\n\t\t} else if (type == Space.Type.Local || type == Space.Type.Session) {\n\t\t\tthis.numericVersion = 0;\n\t\t\tthis.id = '';\n\t\t}\n\t}\n\n\t/**\n\t * Open the Storage Object to be used depending on the Space.Type\n\t *\n\t * @param  {function} [create=null] - Callback for database creation when using an Space.Type.Indexed\n\t * @return {Promise}\n\t */\n\topen (create = null) {\n\t\tif (typeof this.storage === 'undefined') {\n\t\t\tif (this.type === Space.Type.Local) {\n\t\t\t\tthis.storage = window.localStorage;\n\t\t\t\treturn Promise.resolve (this);\n\t\t\t} else if (this.type === Space.Type.Session) {\n\t\t\t\tthis.storage = window.sessionSpace;\n\t\t\t\treturn Promise.resolve (this);\n\t\t\t} else if (this.type === Space.Type.IndexedDB) {\n\t\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\t\tthis.storage = window.indexedDB.open (this.name, this.numericVersion);\n\n\t\t\t\t\tthis.storage.onerror = (event) => {\n\t\t\t\t\t\treject (event);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.storage.onsuccess = (event) => {\n\t\t\t\t\t\tthis.storage = event.target.result;\n\t\t\t\t\t\tresolve (this);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.storage.onupgradeneeded = (event) => {\n\t\t\t\t\t\tthis.storage = event.target.result;\n\t\t\t\t\t\tcreate (this.storage).then (() => {\n\t\t\t\t\t\t\tresolve (this);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.resolve (this);\n\t\t}\n\t}\n\n\t/**\n\t * Store a key-value pair\n\t *\n\t * @param  {string} key - Key with which this value will be saved\n\t * @param  {Object|string|Number} - Value to save\n\t * @return {Promise}\n\t */\n\tset (key, value) {\n\t\treturn this.open ().then (() => {\n\n\t\t\tfor (const id of Object.keys (this.transformations)) {\n\t\t\t\tif (typeof this.transformations[id].set === 'function') {\n\t\t\t\t\tvalue = this.transformations[id].set.call (null, key, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.type === Space.Type.Local || this.type === Space.Type.Session) {\n\t\t\t\tif (typeof value === 'object') {\n\t\t\t\t\tthis.storage.setItem (this.id + key, JSON.stringify (value));\n\t\t\t\t} else {\n\t\t\t\t\tthis.storage.setItem (this.id + key, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const callback of this.callbacks.store) {\n\t\t\t\tcallback.call (null, key, value);\n\t\t\t}\n\n\t\t\treturn Promise.resolve (value);\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves a value from storage given it's key\n\t *\n\t * @param  {string} - Key with which the value was saved\n\t * @return {Promise<Object>|Promise<string>|Promise<Number>} - Resolves to the retreived value\n\t * or its rejected if it doesn't exist\n\t */\n\tget (key) {\n\t\treturn this.open ().then (() => {\n\t\t\treturn new Promise ((resolve, reject) => {\n\t\t\t\tlet value = null;\n\t\t\t\tswitch (this.type) {\n\t\t\t\t\tcase Space.Type.Local:\n\t\t\t\t\tcase Space.Type.Session:\n\t\t\t\t\t\tvalue = this.storage.getItem (this.id + key);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst o = JSON.parse (value);\n\t\t\t\t\t\t\tif (o && typeof o === 'object') {\n\t\t\t\t\t\t\t\tvalue = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (exception) {\n\t\t\t\t\t\t\t// Unable to parse to JSON\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Space.Type.IndexedDB:\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tfor (const id of Object.keys (this.transformations)) {\n\t\t\t\t\t\tif (typeof this.transformations[id].get === 'function') {\n\t\t\t\t\t\t\tvalue = this.transformations[id].get.call (null, key, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresolve (value);\n\t\t\t\t} else {\n\t\t\t\t\treject ();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Check if a space contains a given key.\n\t *\n\t * @param  {string} key - Key to look for.\n\t * @return {Promise} Promise gets resolved if it exists and rejected if\n\t * doesn't\n\t */\n\tcontains (key) {\n\t\treturn this.keys ().then ((keys) => {\n\t\t\tif (keys.includes (key)) {\n\t\t\t\tPromise.resolve ();\n\t\t\t} else {\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Upgrade a Space Version\n\t * @param oldVersion {string} - The version of the storage to be upgraded\n\t * @param newVersion {string} - The version to be upgraded to\n\t * @param callback {function} - Function to transform the old stored values to the new version's format\n\t * @returns {Promise} Result of the upgrade operation\n\t */\n\tupgrade (oldVersion, newVersion, callback) {\n\t\treturn this.open ().then (() => {\n\n\t\t\tif (this.type === Space.Type.Local || this.type === Space.Type.Session) {\n\n\t\t\t\t// Get all keys from the previous version\n\t\t\t\tconst keys = Object.keys (this.storage).filter ((key) => {\n\t\t\t\t\treturn key.indexOf (`${this.name}::${oldVersion}_`) === 0;\n\t\t\t\t}).map ((key) => {\n\t\t\t\t\treturn key.replace (`${this.name}::${oldVersion}_`, '');\n\t\t\t\t});\n\n\t\t\t\tconst promises = [];\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\t// Get the value stored with the previous version\n\t\t\t\t\tlet previous = this.storage.getItem (`${this.name}::${oldVersion}_${key}`);\n\n\t\t\t\t\t// Transform string to JSON object if needed\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst o = JSON.parse (previous);\n\t\t\t\t\t\tif (o && typeof o === 'object') {\n\t\t\t\t\t\t\tprevious = o;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (exception) {\n\t\t\t\t\t\t// Unable to parse to JSON\n\t\t\t\t\t}\n\n\t\t\t\t\t// Apply the callback to the value.\n\t\t\t\t\tpromises.push (callback.call (null, key, previous).then ((value) => {\n\t\t\t\t\t\t// Store the new one with the new version key\n\t\t\t\t\t\tthis.set (key, value).then (() => {\n\t\t\t\t\t\t\t// Delete the previous element from storage\n\t\t\t\t\t\t\tthis.storage.removeItem (`${this.name}::${oldVersion}_${key}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\treturn Promise.all (promises);\n\t\t\t}\n\t\t\treturn Promise.reject ();\n\t\t});\n\t}\n\n\t/**\n\t * Rename a Space\n\t * @param name {string} - New name to be used.\n\t * @returns {Promise} Result of the rename operation\n\t */\n\trename (name) {\n\t\treturn this.open ().then (() => {\n\n\t\t\t// Check if the name is different\n\t\t\tif (this.name !== name) {\n\n\t\t\t\tif (this.type === Space.Type.Local || this.type === Space.Type.Session) {\n\t\t\t\t\treturn this.keys ().then ((keys) => {\n\n\t\t\t\t\t\t// Save the previous Space id\n\t\t\t\t\t\tconst oldId = this.id;\n\n\t\t\t\t\t\t// Set new object properties with the new name\n\t\t\t\t\t\tthis.name = name;\n\t\t\t\t\t\tthis.id = `${this.name}::${this.version}_`;\n\t\t\t\t\t\tconst promises = [];\n\n\t\t\t\t\t\tfor (const key of keys) {\n\t\t\t\t\t\t\tpromises.push (this.set (key, this.storage.getItem (`${oldId}${key}`)).then (() => {\n\t\t\t\t\t\t\t\tthis.storage.removeItem (`${oldId}${key}`);\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Promise.all (promises);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject ();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Set the callback function to be run every time a value is stored.\n\t *\n\t * @param  {function} callback - Callback Function. Key and Value pair will be sent as parameters when run.\n\t */\n\tonStore (callback) {\n\t\tthis.callbacks.store.push (callback);\n\t}\n\n\t/**\n\t * Set the callback function to be run every time a value is deleted.\n\t *\n\t * @param  {function} callback - Callback Function. Key and Value pair will be sent as parameters when run.\n\t */\n\tonDelete (callback) {\n\t\tthis.callbacks.delete.push (callback);\n\t}\n\n\t/**\n\t * Add a transformation function to the space.\n\t *\n\t * @param  {string} id - Unique transformation name or identifier\n\t * @param  {function|null} get - Transformation function to apply to the content before\n\t * returning the value when using the get () function .\n\t * @param  {function|null} set - Transformation function to apply to the content before\n\t * saving it when using the set () function befo.\n\t */\n\taddTransformation ({id, get, set}) {\n\t\tthis.transformations[id] = {\n\t\t\tid,\n\t\t\tget,\n\t\t\tset\n\t\t};\n\t}\n\n\t/**\n\t * Remove a transformation function given its id\n\t *\n\t * @param  {string} id - Name or identifier of the transformation to remove\n\t */\n\tremoveTransformation (id) {\n\t\tdelete this.transformations[id];\n\t}\n\n\t/**\n\t * Get the key that corresponds to a given index in the storage\n\t *\n\t * @param  {Number} index - Index to get the key from\n\t * @param  {boolean} [full=false] - Whether to return the full key name including space id or just the key name\n\t * @return {Promise<string>} - Resolves to the key's name\n\t */\n\tkey (index, full = false) {\n\t\treturn this.open ().then (() => {\n\t\t\tif (this.type === Space.Type.Local || this.type === Space.Type.Session) {\n\t\t\t\tif (full === true) {\n\t\t\t\t\treturn Promise.resolve (this.storage.key (index));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve (this.storage.key (index).replace (this.id, ''));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Return all keys stored in the space.\n\t *\n\t * @param {boolean} [full=false] - Whether to return the full key name including space id or just the key name\n\t * @return {Promise<string[]>}  - Array of keys\n\t */\n\tkeys (full = false) {\n\t\treturn this.open ().then (() => {\n\t\t\tif (this.type === Space.Type.Local || this.type === Space.Type.Session) {\n\t\t\t\treturn Promise.resolve (Object.keys (this.storage).filter ((key) => {\n\t\t\t\t\treturn key.indexOf (this.id) === 0;\n\t\t\t\t}).map ((key) => {\n\t\t\t\t\tif (full === true) {\n\t\t\t\t\t\treturn key;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn key.replace (this.id, '');\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\treturn Promise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/**\n\t * Delete a value from the space given it's key\n\t *\n\t * @param  {string} key - Key of the item to delete\n\t * @return {Promise<key, value>} - Resolves to the key and value of the deleted object\n\t */\n\tremove (key) {\n\t\treturn this.open ().then (() => {\n\t\t\tif (this.type === Space.Type.Local || this.type === Space.Type.Session) {\n\t\t\t\treturn this.get (key).then ((value) => {\n\t\t\t\t\tthis.storage.removeItem (this.id + key);\n\n\t\t\t\t\t// Run the callback for deletions\n\t\t\t\t\tfor (const callback of this.callbacks.delete) {\n\t\t\t\t\t\tcallback.call (null, key, value);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve (key, value);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tPromise.reject ();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Clear the entire space\n\t *\n\t * @return {Promise} - Result of the clear operation\n\t */\n\tclear () {\n\t\treturn this.open ().then (() => {\n\t\t\tif (this.type === Space.Type.Local || this.type === Space.Type.Session) {\n\t\t\t\treturn this.keys ().then ((keys) => {\n\t\t\t\t\tfor (const key of keys) {\n\t\t\t\t\t\tthis.remove (key);\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.resolve ();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tPromise.reject ();\n\t\t\t}\n\t\t});\n\t}\n}\n\nSpace.Type = {\n\tLocal: 1,\n\tSession: 2,\n\tIndexed: 3\n};","/**\n* ==============================\n* Text\n* ==============================\n*/\n\n/**\n * Provides utility functions for texts\n * @class\n */\nexport class Text {\n\n\t/**\n\t * @static capitalize - Capatalizes every word in a string\n\t *\n\t * @param  {string} text - Text string to capitalize\n\t * @return {string} - Capitalized string\n\t */\n\tstatic capitalize (text) {\n\t\treturn text.replace (/\\w\\S*/g, (txt) => {\n\t\t\treturn txt.charAt (0).toUpperCase () + txt.substr (1).toLowerCase ();\n\t\t});\n\t}\n\n\t/**\n\t * @static suffix - Gets the suffix of a string given a key\n\t *\n\t * @param  {string} key - Key part of the string\n\t * @param  {string} text - Full string to extract the suffix from\n\t * @return {string} - Suffix\n\t */\n\tstatic suffix (key, text) {\n\t\tlet suffix = '';\n\t\tlet position = text.indexOf (key);\n\t\tif (position !== -1) {\n\t\t\tposition += key.length;\n\t\t\tsuffix = text.substr (position, text.length - position);\n\t\t}\n\t\treturn suffix;\n\t}\n\n\t/**\n\t * @static prefix - Gets the prefix of a string given a key\n\t *\n\t * @param  {string} key - Key part of the string\n\t * @param  {string} text - Full string to extract the prefix from\n\t * @return {string} - Prefix\n\t */\n\tstatic prefix (key, text) {\n\t\tlet prefix = '';\n\t\tconst position = text.indexOf (key);\n\t\tif (position != -1) {\n\t\t\tprefix = text.substr (0, position);\n\t\t}\n\t\treturn prefix;\n\t}\n\n\t/**\n\t * @static friendly - Transforms a given text into a friendly URL string replacing all special characters\n\t *\n\t * @param  {string} text - The text to build the url from\n\t * @return {string} - Friendly URL\n\t */\n\tstatic friendly (text) {\n\t\tconst regex = [\n\t\t\t/[áàâãªä]/,\n\t\t\t/[ÁÀÂÃÄ]/,\n\t\t\t/[ÍÌÎÏ]/,\n\t\t\t/[íìîï]/,\n\t\t\t/[éèêë]/,\n\t\t\t/[ÉÈÊË]/,\n\t\t\t/[óòôõºö]/,\n\t\t\t/[ÓÒÔÕÖ]/,\n\t\t\t/[úùûü]/,\n\t\t\t/[ÚÙÛÜ]/,\n\t\t\t/ç/,\n\t\t\t/Ç/,\n\t\t\t/ñ/,\n\t\t\t/Ñ/,\n\t\t\t/_/,\n\t\t\t/[’‘‹›<>']/,\n\t\t\t/[“”«»„\"]/,\n\t\t\t/[(){}[\\]]/,\n\t\t\t/[?¿!¡#$%&^*´`~/°|]/,\n\t\t\t/[,.:;]/,\n\t\t\t/ /\n\t\t];\n\n\t\tconst replacements = [\n\t\t\t'a',\n\t\t\t'A',\n\t\t\t'I',\n\t\t\t'i',\n\t\t\t'e',\n\t\t\t'E',\n\t\t\t'o',\n\t\t\t'O',\n\t\t\t'u',\n\t\t\t'U',\n\t\t\t'c',\n\t\t\t'C',\n\t\t\t'n',\n\t\t\t'N',\n\t\t\t'-',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'',\n\t\t\t'-'\n\t\t];\n\n\t\tfor (const index in regex) {\n\t\t\ttext = text.replace(new RegExp(regex[index], 'g'), replacements[index]);\n\t\t}\n\n\t\treturn text;\n\t}\n}","export * from './src/DOM';\nexport * from './src/Form';\nexport * from './src/Platform';\nexport * from './src/Preload';\nexport * from './src/Request';\nexport * from './src/Space';\nexport * from './src/Text';"]}